{"version":3,"sources":["webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/add_months/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/get_days_in_month/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/add_days/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/end_of_month/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/is_same_day/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/is_same_month/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/is_today/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/start_of_month/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/start_of_today/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/sub_months/index.js","webpack:///./src/icons/ArrowLeft.tsx","webpack:///./src/icons/ArrowRight.tsx","webpack:///./src/components/DatePicker.tsx"],"names":[],"mappings":";;;;;;AAAA,YAAY,mBAAO,CAAC,EAAmB;AACvC,qBAAqB,mBAAO,CAAC,GAA+B;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjCA,YAAY,mBAAO,CAAC,EAAmB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC3BA,YAAY,mBAAO,CAAC,EAAmB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzBA,YAAY,mBAAO,CAAC,EAAmB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1BA,iBAAiB,mBAAO,CAAC,EAA0B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AC5BA,YAAY,mBAAO,CAAC,EAAmB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"DatePicker.js","sourcesContent":["var parse = require('../parse/index.js')\nvar getDaysInMonth = require('../get_days_in_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added\n * @returns {Date} the new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nfunction addMonths (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  var desiredMonth = date.getMonth() + amount\n  var dateWithDesiredMonth = new Date(0)\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1)\n  dateWithDesiredMonth.setHours(0, 0, 0, 0)\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()))\n  return date\n}\n\nmodule.exports = addMonths\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nfunction getDaysInMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  var monthIndex = date.getMonth()\n  var lastDayOfMonth = new Date(0)\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0)\n  lastDayOfMonth.setHours(0, 0, 0, 0)\n  return lastDayOfMonth.getDate()\n}\n\nmodule.exports = getDaysInMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added\n * @returns {Date} the new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nfunction addDays (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  date.setDate(date.getDate() + amount)\n  return date\n}\n\nmodule.exports = addDays\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nfunction endOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  date.setFullYear(date.getFullYear(), month + 1, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfMonth\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(\n *   new Date(2014, 8, 4, 6, 0),\n *   new Date(2014, 8, 4, 18, 0)\n * )\n * //=> true\n */\nfunction isSameDay (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft)\n  var dateRightStartOfDay = startOfDay(dirtyDateRight)\n\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime()\n}\n\nmodule.exports = isSameDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(\n *   new Date(2014, 8, 2),\n *   new Date(2014, 8, 25)\n * )\n * //=> true\n */\nfunction isSameMonth (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getFullYear() === dateRight.getFullYear() &&\n    dateLeft.getMonth() === dateRight.getMonth()\n}\n\nmodule.exports = isSameMonth\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date today?\n *\n * @description\n * Is the given date today?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nfunction isToday (dirtyDate) {\n  return startOfDay(dirtyDate).getTime() === startOfDay(new Date()).getTime()\n}\n\nmodule.exports = isToday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setDate(1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfMonth\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of today.\n *\n * @description\n * Return the start of today.\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\nfunction startOfToday () {\n  return startOfDay(new Date())\n}\n\nmodule.exports = startOfToday\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted\n * @returns {Date} the new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction subMonths (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMonths(dirtyDate, -amount)\n}\n\nmodule.exports = subMonths\n","/**\n * Material design redistributed from https://github.com/google/material-design-icons\n *\n * SVG contents redistributed under Apache License 2.0:\n * https://github.com/google/material-design-icons/blob/master/LICENSE\n * Copyright 2015 Google, Inc. All Rights Reserved.\n */\nimport React from 'react';\nimport styles from './styles';\nimport { createElement, StyleProp, TextStyle, ViewStyle } from 'react-native';\n\ninterface Props {\n  style?: StyleProp<ViewStyle & TextStyle>;\n}\n\nconst ArrowLeft = (props: Props): React.ReactElement<Props> =>\n  createElement(\n    'svg',\n    {\n      ...props,\n      style: [styles.root, props.style],\n      viewBox: '0 0 24 24'\n    },\n    <g>\n      <path d=\"M14 7l-5 5 5 5V7z\" />\n      <path fill=\"none\" d=\"M24 0v24H0V0h24z\" />\n    </g>\n  );\n\nArrowLeft.metadata = { height: 24, width: 24 };\n\nexport default ArrowLeft;\n","/**\n * Material design redistributed from https://github.com/google/material-design-icons\n *\n * SVG contents redistributed under Apache License 2.0:\n * https://github.com/google/material-design-icons/blob/master/LICENSE\n * Copyright 2015 Google, Inc. All Rights Reserved.\n */\nimport React from 'react';\nimport styles from './styles';\nimport { createElement, StyleProp, TextStyle, ViewStyle } from 'react-native';\n\ninterface Props {\n  style?: StyleProp<ViewStyle & TextStyle>;\n}\n\nconst ArrowRight = (props: Props): React.ReactElement<Props> =>\n  createElement(\n    'svg',\n    {\n      ...props,\n      style: [styles.root, props.style],\n      viewBox: '0 0 24 24'\n    },\n    <g>\n      <path d=\"M10 17l5-5-5-5v10z\" />\n      <path fill=\"none\" d=\"M0 24V0h24v24H0z\" />\n    </g>\n  );\n\nArrowRight.metadata = { height: 24, width: 24 };\n\nexport default ArrowRight;\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport * as Theme from '../theme';\nimport addDays from 'date-fns/add_days';\nimport addMonths from 'date-fns/add_months';\nimport ArrowLeftIcon from '../icons/ArrowLeft';\nimport ArrowRightIcon from '../icons/ArrowRight';\nimport Button from './Button';\nimport endOfMonth from 'date-fns/end_of_month';\nimport formatDate from 'date-fns/format';\nimport getDaysInMonth from 'date-fns/get_days_in_month';\nimport isSameDay from 'date-fns/is_same_day';\nimport isSameMonth from 'date-fns/is_same_month';\nimport isToday from 'date-fns/is_today';\nimport React from 'react';\nimport RelativeModal from './RelativeModal';\nimport startOfMonth from 'date-fns/start_of_month';\nimport startOfToday from 'date-fns/start_of_today';\nimport startOfWeek from 'date-fns/start_of_week';\nimport subMonths from 'date-fns/sub_months';\nimport { StyleSheet, Text, View } from 'react-native';\n\ninterface Props extends React.ComponentProps<typeof RelativeModal> {\n  minDate?: Date;\n  maxDate?: Date;\n  onSelect?: (date: Date) => void;\n  selectedDate?: Date;\n}\n\nconst DatePicker = (props: Props): React.ReactElement => {\n  const {\n    maxDate = new Date(8640000000000000),\n    minDate = new Date(-8640000000000000),\n    onDismiss,\n    onSelect,\n    relativeTo,\n    selectedDate = startOfToday()\n  } = props;\n\n  const [currentMonth, setCurrentMonth] = React.useState<Date>(startOfMonth(selectedDate));\n\n  const daysInMonth = getDaysInMonth(currentMonth);\n  const startDate = startOfWeek(startOfMonth(currentMonth), { weekStartsOn: 0 });\n\n  // @ts-ignore\n  const month = new Array(Math.ceil(daysInMonth / 7 + 2)).fill().reduce((memo, _week, weekIndex) => {\n    const firstDayOfWeek = addDays(startDate, weekIndex * 7);\n    if (weekIndex > 0 && !isSameMonth(firstDayOfWeek, currentMonth)) {\n      return memo;\n    }\n    memo.push(\n      // @ts-ignore\n      new Array(7).fill().map((_, dayIndex) => {\n        const date = addDays(firstDayOfWeek, dayIndex);\n        return { date, isSameMonth: isSameMonth(date, currentMonth) };\n      })\n    );\n    return memo;\n  }, []);\n\n  const handleNextMonth = React.useCallback(() => {\n    setCurrentMonth(currentMonth => addMonths(currentMonth, 1));\n  }, []);\n\n  const handlePreviousMonth = React.useCallback(() => {\n    setCurrentMonth(currentMonth => subMonths(currentMonth, 1));\n  }, []);\n\n  return (\n    <RelativeModal onDismiss={onDismiss} portalRootID=\"menuPortal\" relativeTo={relativeTo}>\n      <View style={[styles.month]}>\n        <View style={styles.header}>\n          <View style={styles.day}>\n            <Button\n              disabled={endOfMonth(subMonths(currentMonth, 1)) < minDate}\n              icon={ArrowLeftIcon}\n              iconOnly\n              onPress={handlePreviousMonth}\n              title=\"Previous month\"\n            />\n          </View>\n          <View style={styles.monthHeader}>\n            <Text style={styles.monthText}>{formatDate(currentMonth, 'MMMM')}</Text>\n          </View>\n          <View style={styles.day}>\n            <Button\n              disabled={startOfMonth(addMonths(currentMonth, 1)) > maxDate}\n              icon={ArrowRightIcon}\n              iconOnly\n              onPress={handleNextMonth}\n              title=\"Next month\"\n            />\n          </View>\n        </View>\n        <View style={styles.week}>\n          {month[0].map((day, index) => (\n            <View key={index} style={styles.day}>\n              <Text style={styles.text}>{formatDate(day.date, 'dd')}</Text>\n            </View>\n          ))}\n        </View>\n        {month.map((week, index) => (\n          <View key={index} style={styles.week}>\n            {week.map((day, index) => {\n              const inRange = day.date <= maxDate && day.date >= minDate;\n              const isSelected = isSameDay(day.date, selectedDate);\n              const today = isToday(day.date);\n              return (\n                <View key={index} style={styles.day}>\n                  <Button\n                    accessibilityLabel={formatDate(day.date, 'YYYY-MM-DD')}\n                    color={today ? 'secondary' : 'primary'}\n                    disabled={!inRange}\n                    onPress={() => {\n                      onSelect(day.date);\n                    }}\n                    title={formatDate(day.date, 'D')}\n                    type={isSelected ? 'unelevated' : 'text'}\n                  />\n                </View>\n              );\n            })}\n          </View>\n        ))}\n      </View>\n    </RelativeModal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  root: {},\n  month: {\n    padding: Theme.Spacing.Xsmall\n  },\n  header: {\n    flexDirection: 'row'\n  },\n  day: {\n    flexGrow: 1,\n    flexBasis: `${(1 / 7) * 100}%`\n  },\n  hovered: {},\n  monthHeader: {\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: `${(5 / 7) * 100}%`,\n    justifyContent: 'center'\n  },\n  monthText: {\n    textAlign: 'center',\n    fontWeight: Theme.FontWeight.Bold\n  },\n  week: {\n    flexDirection: 'row'\n  },\n  text: {\n    textAlign: 'center'\n  }\n});\n\nexport default DatePicker;\n"],"sourceRoot":""}