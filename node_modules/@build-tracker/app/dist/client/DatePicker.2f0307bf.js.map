{"version":3,"sources":["webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/add_months/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/get_days_in_month/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/add_days/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/end_of_month/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/is_same_day/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/is_same_month/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/is_today/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/start_of_month/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/start_of_today/index.js","webpack:////Users/parmstrong/Development/build-tracker/node_modules/date-fns/sub_months/index.js","webpack:///./src/icons/ArrowLeft.tsx","webpack:///./src/icons/ArrowRight.tsx","webpack:///./src/components/DatePicker.tsx"],"names":["parse","__webpack_require__","getDaysInMonth","module","exports","dirtyDate","dirtyAmount","date","amount","Number","desiredMonth","getMonth","dateWithDesiredMonth","Date","setFullYear","getFullYear","setHours","daysInMonth","setMonth","Math","min","getDate","year","monthIndex","lastDayOfMonth","setDate","month","startOfDay","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","dateRightStartOfDay","getTime","dateLeft","dateRight","addMonths","ArrowLeft","props","Object","createElement","__assign","style","styles","root","viewBox","react_default","a","d","fill","metadata","height","width","icons_ArrowLeft","ArrowRight","ArrowRight_assign","icons_ArrowRight","DatePicker_styles","create","padding","theme","Xsmall","header","flexDirection","day","flexGrow","flexBasis","hovered","monthHeader","flexShrink","justifyContent","monthText","textAlign","fontWeight","Bold","week","text","__webpack_exports__","_a","maxDate","_b","minDate","onDismiss","onSelect","relativeTo","_c","selectedDate","start_of_today_default","_d","useState","start_of_month_default","currentMonth","setCurrentMonth","get_days_in_month_default","startDate","start_of_week_default","weekStartsOn","Array","ceil","reduce","memo","_week","weekIndex","firstDayOfWeek","add_days_default","is_same_month_default","push","map","_","dayIndex","isSameMonth","handleNextMonth","useCallback","add_months_default","handlePreviousMonth","sub_months_default","RelativeModal","portalRootID","View","Button","disabled","end_of_month_default","icon","iconOnly","onPress","title","Text","format_default","index","key","inRange","isSelected","is_same_day_default","today","is_today_default","accessibilityLabel","color","type"],"mappings":"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","file":"DatePicker.2f0307bf.js","sourcesContent":["var parse = require('../parse/index.js')\nvar getDaysInMonth = require('../get_days_in_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added\n * @returns {Date} the new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nfunction addMonths (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  var desiredMonth = date.getMonth() + amount\n  var dateWithDesiredMonth = new Date(0)\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1)\n  dateWithDesiredMonth.setHours(0, 0, 0, 0)\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()))\n  return date\n}\n\nmodule.exports = addMonths\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nfunction getDaysInMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  var monthIndex = date.getMonth()\n  var lastDayOfMonth = new Date(0)\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0)\n  lastDayOfMonth.setHours(0, 0, 0, 0)\n  return lastDayOfMonth.getDate()\n}\n\nmodule.exports = getDaysInMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added\n * @returns {Date} the new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nfunction addDays (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  date.setDate(date.getDate() + amount)\n  return date\n}\n\nmodule.exports = addDays\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nfunction endOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  date.setFullYear(date.getFullYear(), month + 1, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfMonth\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(\n *   new Date(2014, 8, 4, 6, 0),\n *   new Date(2014, 8, 4, 18, 0)\n * )\n * //=> true\n */\nfunction isSameDay (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft)\n  var dateRightStartOfDay = startOfDay(dirtyDateRight)\n\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime()\n}\n\nmodule.exports = isSameDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(\n *   new Date(2014, 8, 2),\n *   new Date(2014, 8, 25)\n * )\n * //=> true\n */\nfunction isSameMonth (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getFullYear() === dateRight.getFullYear() &&\n    dateLeft.getMonth() === dateRight.getMonth()\n}\n\nmodule.exports = isSameMonth\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date today?\n *\n * @description\n * Is the given date today?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nfunction isToday (dirtyDate) {\n  return startOfDay(dirtyDate).getTime() === startOfDay(new Date()).getTime()\n}\n\nmodule.exports = isToday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setDate(1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfMonth\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of today.\n *\n * @description\n * Return the start of today.\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\nfunction startOfToday () {\n  return startOfDay(new Date())\n}\n\nmodule.exports = startOfToday\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted\n * @returns {Date} the new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction subMonths (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMonths(dirtyDate, -amount)\n}\n\nmodule.exports = subMonths\n","/**\n * Material design redistributed from https://github.com/google/material-design-icons\n *\n * SVG contents redistributed under Apache License 2.0:\n * https://github.com/google/material-design-icons/blob/master/LICENSE\n * Copyright 2015 Google, Inc. All Rights Reserved.\n */\nimport React from 'react';\nimport styles from './styles';\nimport { createElement, StyleProp, TextStyle, ViewStyle } from 'react-native';\n\ninterface Props {\n  style?: StyleProp<ViewStyle & TextStyle>;\n}\n\nconst ArrowLeft = (props: Props): React.ReactElement<Props> =>\n  createElement(\n    'svg',\n    {\n      ...props,\n      style: [styles.root, props.style],\n      viewBox: '0 0 24 24'\n    },\n    <g>\n      <path d=\"M14 7l-5 5 5 5V7z\" />\n      <path fill=\"none\" d=\"M24 0v24H0V0h24z\" />\n    </g>\n  );\n\nArrowLeft.metadata = { height: 24, width: 24 };\n\nexport default ArrowLeft;\n","/**\n * Material design redistributed from https://github.com/google/material-design-icons\n *\n * SVG contents redistributed under Apache License 2.0:\n * https://github.com/google/material-design-icons/blob/master/LICENSE\n * Copyright 2015 Google, Inc. All Rights Reserved.\n */\nimport React from 'react';\nimport styles from './styles';\nimport { createElement, StyleProp, TextStyle, ViewStyle } from 'react-native';\n\ninterface Props {\n  style?: StyleProp<ViewStyle & TextStyle>;\n}\n\nconst ArrowRight = (props: Props): React.ReactElement<Props> =>\n  createElement(\n    'svg',\n    {\n      ...props,\n      style: [styles.root, props.style],\n      viewBox: '0 0 24 24'\n    },\n    <g>\n      <path d=\"M10 17l5-5-5-5v10z\" />\n      <path fill=\"none\" d=\"M0 24V0h24v24H0z\" />\n    </g>\n  );\n\nArrowRight.metadata = { height: 24, width: 24 };\n\nexport default ArrowRight;\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport * as Theme from '../theme';\nimport addDays from 'date-fns/add_days';\nimport addMonths from 'date-fns/add_months';\nimport ArrowLeftIcon from '../icons/ArrowLeft';\nimport ArrowRightIcon from '../icons/ArrowRight';\nimport Button from './Button';\nimport endOfMonth from 'date-fns/end_of_month';\nimport formatDate from 'date-fns/format';\nimport getDaysInMonth from 'date-fns/get_days_in_month';\nimport isSameDay from 'date-fns/is_same_day';\nimport isSameMonth from 'date-fns/is_same_month';\nimport isToday from 'date-fns/is_today';\nimport React from 'react';\nimport RelativeModal from './RelativeModal';\nimport startOfMonth from 'date-fns/start_of_month';\nimport startOfToday from 'date-fns/start_of_today';\nimport startOfWeek from 'date-fns/start_of_week';\nimport subMonths from 'date-fns/sub_months';\nimport { StyleSheet, Text, View } from 'react-native';\n\ninterface Props extends React.ComponentProps<typeof RelativeModal> {\n  minDate?: Date;\n  maxDate?: Date;\n  onSelect?: (date: Date) => void;\n  selectedDate?: Date;\n}\n\nconst DatePicker = (props: Props): React.ReactElement => {\n  const {\n    maxDate = new Date(8640000000000000),\n    minDate = new Date(-8640000000000000),\n    onDismiss,\n    onSelect,\n    relativeTo,\n    selectedDate = startOfToday()\n  } = props;\n\n  const [currentMonth, setCurrentMonth] = React.useState<Date>(startOfMonth(selectedDate));\n\n  const daysInMonth = getDaysInMonth(currentMonth);\n  const startDate = startOfWeek(startOfMonth(currentMonth), { weekStartsOn: 0 });\n\n  // @ts-ignore\n  const month = new Array(Math.ceil(daysInMonth / 7 + 2)).fill().reduce((memo, _week, weekIndex) => {\n    const firstDayOfWeek = addDays(startDate, weekIndex * 7);\n    if (weekIndex > 0 && !isSameMonth(firstDayOfWeek, currentMonth)) {\n      return memo;\n    }\n    memo.push(\n      // @ts-ignore\n      new Array(7).fill().map((_, dayIndex) => {\n        const date = addDays(firstDayOfWeek, dayIndex);\n        return { date, isSameMonth: isSameMonth(date, currentMonth) };\n      })\n    );\n    return memo;\n  }, []);\n\n  const handleNextMonth = React.useCallback(() => {\n    setCurrentMonth(currentMonth => addMonths(currentMonth, 1));\n  }, []);\n\n  const handlePreviousMonth = React.useCallback(() => {\n    setCurrentMonth(currentMonth => subMonths(currentMonth, 1));\n  }, []);\n\n  return (\n    <RelativeModal onDismiss={onDismiss} portalRootID=\"menuPortal\" relativeTo={relativeTo}>\n      <View style={[styles.month]}>\n        <View style={styles.header}>\n          <View style={styles.day}>\n            <Button\n              disabled={endOfMonth(subMonths(currentMonth, 1)) < minDate}\n              icon={ArrowLeftIcon}\n              iconOnly\n              onPress={handlePreviousMonth}\n              title=\"Previous month\"\n            />\n          </View>\n          <View style={styles.monthHeader}>\n            <Text style={styles.monthText}>{formatDate(currentMonth, 'MMMM')}</Text>\n          </View>\n          <View style={styles.day}>\n            <Button\n              disabled={startOfMonth(addMonths(currentMonth, 1)) > maxDate}\n              icon={ArrowRightIcon}\n              iconOnly\n              onPress={handleNextMonth}\n              title=\"Next month\"\n            />\n          </View>\n        </View>\n        <View style={styles.week}>\n          {month[0].map((day, index) => (\n            <View key={index} style={styles.day}>\n              <Text style={styles.text}>{formatDate(day.date, 'dd')}</Text>\n            </View>\n          ))}\n        </View>\n        {month.map((week, index) => (\n          <View key={index} style={styles.week}>\n            {week.map((day, index) => {\n              const inRange = day.date <= maxDate && day.date >= minDate;\n              const isSelected = isSameDay(day.date, selectedDate);\n              const today = isToday(day.date);\n              return (\n                <View key={index} style={styles.day}>\n                  <Button\n                    accessibilityLabel={formatDate(day.date, 'YYYY-MM-DD')}\n                    color={today ? 'secondary' : 'primary'}\n                    disabled={!inRange}\n                    onPress={() => {\n                      onSelect(day.date);\n                    }}\n                    title={formatDate(day.date, 'D')}\n                    type={isSelected ? 'unelevated' : 'text'}\n                  />\n                </View>\n              );\n            })}\n          </View>\n        ))}\n      </View>\n    </RelativeModal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  root: {},\n  month: {\n    padding: Theme.Spacing.Xsmall\n  },\n  header: {\n    flexDirection: 'row'\n  },\n  day: {\n    flexGrow: 1,\n    flexBasis: `${(1 / 7) * 100}%`\n  },\n  hovered: {},\n  monthHeader: {\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: `${(5 / 7) * 100}%`,\n    justifyContent: 'center'\n  },\n  monthText: {\n    textAlign: 'center',\n    fontWeight: Theme.FontWeight.Bold\n  },\n  week: {\n    flexDirection: 'row'\n  },\n  text: {\n    textAlign: 'center'\n  }\n});\n\nexport default DatePicker;\n"],"sourceRoot":""}