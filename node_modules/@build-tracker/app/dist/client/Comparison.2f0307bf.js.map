{"version":3,"sources":["webpack:///./src/icons/Close.tsx","webpack:///./src/components/Table.tsx","webpack:///./src/components/BuildInfo.tsx","webpack:///./src/components/ComparisonTable/ArtifactCell.tsx","webpack:///./src/icons/Error.tsx","webpack:///./src/components/Tooltip.tsx","webpack:///./src/icons/Warning.tsx","webpack:///./src/components/ComparisonTable/DeltaCell.tsx","webpack:///./src/components/ComparisonTable/TotalCell.tsx","webpack:///./src/components/ComparisonTable/BodyRow.tsx","webpack:///./src/icons/Folder.tsx","webpack:///./src/components/ComparisonTable/GroupCell.tsx","webpack:///./src/components/ComparisonTable/GroupRow.tsx","webpack:///./src/icons/Info.tsx","webpack:///./src/icons/Remove.tsx","webpack:///./src/components/ComparisonTable/RevisionCell.tsx","webpack:///./src/components/ComparisonTable/RevisionDeltaCell.tsx","webpack:///./src/components/ComparisonTable/TextCell.tsx","webpack:///./src/components/ComparisonTable/HeaderRow.tsx","webpack:///./src/components/ComparisonTable/ComparisonTable.tsx","webpack:///./src/views/Comparison.tsx"],"names":["Close","props","Object","createElement","__assign","style","styles","root","viewBox","react_default","a","d","fill","metadata","height","width","icons_Close","Table","Table_assign","accessibilityRole","Table_styles","table","Thead","group","Tbody","Tr","row","Th","cell","Td","StyleSheet","create","borderCollapse","boxSizing","borderWidth","hairlineWidth","borderBottomStyle","borderRightStyle","borderColor","theme","Gray10","margin","paddingHorizontal","Xsmall","textAlign","BuildInfo_styles","padding","Normal","paddingBottom","Large","header","flexDirection","justifyContent","alignItems","headerText","fontWeight","Bold","fontSize","Medium","infoCell","components_BuildInfo","focusedRevision","mapState","useCallback","state","build","comparator","builds","find","getMetaValue","index_es","revision","dispatch","handleClose","actions","undefined","View","Text","Button","icon","iconOnly","onPress","title","timestamp","toLocaleString","keys","meta","filter","metaKey","map","value","key","charAt","toUpperCase","slice","titleCase","ArtifactCell_styles","artifact","paddingVertical","Xxsmall","name","flexShrink","flexGrow","paddingEnd","switch","paddingStart","hoveredText","color","Primary30","ComparisonTable_ArtifactCell","memo","text","disabled","isActive","onDisable","onEnable","onFocus","brighterColor","src","s","l","handlePress","Hoverable","isHovered","TouchableOpacity","Switch","activeThumbColor","activeTrackColor","toString","onValueChange","toggled","Error","Error_assign","icons_Error","Tooltip_styles","maxWidth","position","backgroundColor","Gray50","borderRadius","Small","transitionProperty","transitionDuration","transitionTimingFunction","Accelerate","transform","scale","opacity","show","components_Tooltip","relativeTo","_a","useState","top","left","setPosition","portalRoot","document","getElementById","ref","createRef","useEffect","mounted","current","Dimensions","get","windowWidth_1","windowHeight_1","measure","_x","_y","tipWidth","tipHeight","measureInWindow","x","y","tooltip","react_dom_default","createPortal","Warning","Warning_assign","icons_Warning","happy","red","green","blue","danger","warning","percentDelta","Math","max","min","abs","DeltaCell_styles","textWrapper","ComparisonTable_DeltaCell","sizeKey","sizeDelta","sizes","percents","viewRef","useRef","showTooltip","setTooltipVisibility","handleEnter","handleExit","failingBudgets","errorBudgets","budget","level","types","ERROR","warningBudgets","WARN","length","hashChanged","stringChange","toFixed","dist","tooltipText","join","accessibilityLabel","onMouseEnter","onMouseLeave","testID","ComparisonTable_TotalCell","BodyRow_styles","ComparisonTable_BodyRow","colorScale","onDisableArtifact","onEnableArtifact","onFocusArtifact","onHoverArtifact","rowIndex","artifactName","handleMouseEnter","rows","i","type","comparator_0","ARTIFACT","DELTA","TOTAL","Folder","Folder_assign","icons_Folder","GroupCell_styles","folder","Gray40","ComparisonTable_GroupCell","artifactNames","nameRef","_b","setShowTooltip","handleValueChange","handleToggleTooltip","handleFocus","Primary00","GroupRow_styles","Gray05","Gray20","ComparisonTable_GroupRow","onHover","GROUP","TOTAL_DELTA","Info","Info_assign","icons_Info","Remove","Remove_assign","icons_Remove","RevisionCell_styles","hovered","content","ComparisonTable_RevisionCell","onRemove","contentRef","showMenu","toggleMenu","handleToggleMenu","handleRemove","Fragment","Menu","onDismiss","MenuItem","label","RevisionDeltaCell_styles","delta","ComparisonTable_RevisionDeltaCell","againstRevision","deltaIndex","ComparisonTable_TextCell","El","HeaderRow_styles","headerCell","zIndex","ComparisonTable_HeaderRow","onFocusRevision","onRemoveRevision","headerRow","TEXT","REVISION","REVISION_DELTA","emptyArray","ComparisonTable_styles","ComparisonTable_ComparisonTable","activeArtifacts","disabledArtifactsVisible","hoveredArtifacts","onDisableArtifacts","onEnableArtifacts","onFocusArtifacts","onHoverArtifacts","matrix","toJSON","handleMouseOut","handleHoverArtifact","handleDisableArtifact","handleEnableArtifact","handleFocusArtifact","groups","groupName","includes","every","artifacts","Comparison_mapState","colorScaleName","activeComparator","Comparison_styles","tableScroll","buildInfo","borderTopColor","borderTopWidth","animationDuration","animationKeyframes","0%","translateY","100%","animationTimingFunction","animationIterationCount","__webpack_exports__","useMemo","ColorScale","domain","handleDisableArtifacts","handleEnableArtifacts","handleFocusArtifacts","handleFocusRevision","handleRemoveRevision","handleHoverArtifacts","ScrollView","horizontal","Suspense","fallback"],"mappings":"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","file":"Comparison.2f0307bf.js","sourcesContent":["/**\n * Material design redistributed from https://github.com/google/material-design-icons\n *\n * SVG contents redistributed under Apache License 2.0:\n * https://github.com/google/material-design-icons/blob/master/LICENSE\n * Copyright 2015 Google, Inc. All Rights Reserved.\n */\nimport React from 'react';\nimport styles from './styles';\nimport { createElement, StyleProp, TextStyle, ViewStyle } from 'react-native';\n\ninterface Props {\n  style?: StyleProp<ViewStyle & TextStyle>;\n}\n\nconst Close = (props: Props): React.ReactElement<Props> =>\n  createElement(\n    'svg',\n    {\n      ...props,\n      style: [styles.root, props.style],\n      viewBox: '0 0 24 24'\n    },\n    <g>\n      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </g>\n  );\n\nClose.metadata = { height: 24, width: 24 };\n\nexport default Close;\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport * as Theme from '../theme';\nimport { createElement, StyleProp, StyleSheet, ViewProps, ViewStyle } from 'react-native';\n\ninterface TableProps extends ViewProps {\n  children?: React.ReactNode;\n  onMouseEnter?: (event: MouseEvent) => void;\n  onMouseLeave?: (event: MouseEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  title?: string;\n}\n\nexport const Table = (props: TableProps): React.ReactElement =>\n  createElement('table', { ...props, accessibilityRole: 'table', style: [styles.table, props.style] });\n\nexport const Thead = (props: TableProps): React.ReactElement =>\n  createElement('thead', { ...props, accessibilityRole: 'group', style: [styles.group, props.style] });\n\nexport const Tbody = (props: TableProps): React.ReactElement =>\n  createElement('tbody', { ...props, accessibilityRole: 'group', style: [styles.group, props.style] });\n\nexport const Tr = (props: TableProps): React.ReactElement =>\n  createElement('tr', { ...props, accessibilityRole: 'row', style: [styles.row, props.style] });\n\nexport const Th = (props: TableProps): React.ReactElement =>\n  createElement('th', { ...props, accessibilityRole: 'cell', style: [styles.cell, props.style] });\n\nexport const Td = (props: TableProps): React.ReactElement =>\n  createElement('td', { ...props, accessibilityRole: 'cell', style: [styles.cell, props.style] });\n\nconst styles = StyleSheet.create({\n  table: {\n    // @ts-ignore\n    borderCollapse: 'collapse'\n  },\n  group: {\n    // @ts-ignore\n    boxSizing: 'border-box'\n  },\n  row: {\n    // @ts-ignore\n    boxSizing: 'border-box'\n  },\n  cell: {\n    // @ts-ignore\n    boxSizing: 'border-box',\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomStyle: 'solid',\n    borderRightStyle: 'dotted',\n    borderColor: Theme.Color.Gray10,\n    margin: 0,\n    paddingHorizontal: Theme.Spacing.Xsmall,\n    textAlign: 'right'\n  }\n});\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport * as Theme from '../theme';\nimport Button from './Button';\nimport CloseIcon from '../icons/Close';\nimport React from 'react';\nimport { setFocusedRevision } from '../store/actions';\nimport { State } from '../store/types';\nimport { StyleProp, StyleSheet, Text, View, ViewStyle } from 'react-native';\nimport { Table, Tbody, Td, Th, Tr } from './Table';\nimport { useDispatch, useMappedState } from 'redux-react-hook';\n\ninterface Props {\n  focusedRevision: string;\n  style?: StyleProp<ViewStyle>;\n}\n\nconst titleCase = (value: string): string => {\n  return `${value.charAt(0).toUpperCase()}${value.slice(1)}`;\n};\n\nconst BuildInfo = (props: Props): React.ReactElement => {\n  const { focusedRevision, style } = props;\n\n  const mapState = React.useCallback(\n    (state: State) => ({\n      build: state.comparator.builds.find(build => build.getMetaValue('revision') === focusedRevision)\n    }),\n    [focusedRevision]\n  );\n  const { build } = useMappedState(mapState);\n  const revision = build.getMetaValue('revision');\n\n  const dispatch = useDispatch();\n\n  const handleClose = React.useCallback(() => {\n    dispatch(setFocusedRevision(undefined));\n  }, [dispatch]);\n\n  return (\n    <View style={[styles.root, style]}>\n      <View style={styles.header}>\n        <Text style={styles.headerText}>Revision details</Text>\n        <Button icon={CloseIcon} iconOnly onPress={handleClose} title=\"Close\" />\n      </View>\n      <Table>\n        <Tbody>\n          <Tr>\n            <Th>\n              <Text>Revision</Text>\n            </Th>\n            <Td style={styles.infoCell}>\n              <Text>{revision}</Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Th>\n              <Text>Date</Text>\n            </Th>\n            <Td style={styles.infoCell}>\n              <Text>{build.timestamp.toLocaleString()}</Text>\n            </Td>\n          </Tr>\n          {Object.keys(build.meta)\n            .filter(metaKey => metaKey !== 'revision' && metaKey !== 'timestamp')\n            .map(metaKey => {\n              // @ts-ignore\n              const value = build.getMetaValue(metaKey);\n              return (\n                <Tr key={metaKey}>\n                  <Th>\n                    <Text>{titleCase(metaKey)}</Text>\n                  </Th>\n                  <Td style={styles.infoCell}>\n                    <Text>{value}</Text>\n                  </Td>\n                </Tr>\n              );\n            })}\n        </Tbody>\n      </Table>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  root: {\n    padding: Theme.Spacing.Normal,\n    paddingBottom: Theme.Spacing.Large\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  // @ts-ignore\n  headerText: {\n    fontWeight: Theme.FontWeight.Bold,\n    fontSize: Theme.FontSize.Medium\n  },\n  infoCell: {\n    textAlign: 'left'\n  }\n});\n\nexport default BuildInfo;\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport * as Theme from '../../theme';\nimport Hoverable from '../Hoverable';\nimport { hsl } from 'd3-color';\nimport React from 'react';\nimport { Th } from '../Table';\nimport { ArtifactCell as ACell, GroupCell as GCell } from '@build-tracker/comparator';\nimport { StyleProp, StyleSheet, Switch, Text, TouchableOpacity, View, ViewStyle } from 'react-native';\n\ninterface Props {\n  cell: ACell | GCell;\n  color: string;\n  disabled?: boolean;\n  isActive: boolean;\n  onDisable: (artifactName: string) => void;\n  onEnable: (artifactName: string) => void;\n  onFocus: (artifactName: string) => void;\n  style?: StyleProp<ViewStyle>;\n}\n\nexport const ArtifactCell = (props: Props): React.ReactElement => {\n  const {\n    cell: { text },\n    color,\n    disabled,\n    isActive,\n    onDisable,\n    onEnable,\n    onFocus,\n    style\n  } = props;\n  const brighterColor = hsl(color);\n  brighterColor.s = 0.2;\n  brighterColor.l = 0.8;\n\n  const handleValueChange = (toggled: boolean): void => {\n    toggled ? onEnable(text) : onDisable(text);\n  };\n\n  const handlePress = React.useCallback(() => {\n    onFocus(text);\n  }, [onFocus, text]);\n\n  return (\n    <Th style={style}>\n      <View style={styles.artifact}>\n        <Hoverable>\n          {isHovered => (\n            <TouchableOpacity accessibilityRole=\"button\" onPress={handlePress} style={styles.name}>\n              <Text style={[isHovered && styles.hoveredText]}>{text}</Text>\n            </TouchableOpacity>\n          )}\n        </Hoverable>\n        <View style={styles.switch}>\n          {\n            // @ts-ignore\n\n            <Switch\n              activeThumbColor={color}\n              activeTrackColor={brighterColor.toString()}\n              disabled={disabled}\n              onValueChange={handleValueChange}\n              value={isActive}\n            />\n          }\n        </View>\n      </View>\n    </Th>\n  );\n};\n\nconst styles = StyleSheet.create({\n  artifact: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: Theme.Spacing.Xxsmall\n  },\n  name: {\n    flexShrink: 1,\n    flexGrow: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    paddingEnd: Theme.Spacing.Xsmall\n  },\n  switch: {\n    paddingStart: Theme.Spacing.Xsmall\n  },\n  hoveredText: {\n    color: Theme.Color.Primary30\n  }\n});\n\nexport default React.memo(ArtifactCell);\n","/**\n * Material design redistributed from https://github.com/google/material-design-icons\n *\n * SVG contents redistributed under Apache License 2.0:\n * https://github.com/google/material-design-icons/blob/master/LICENSE\n * Copyright 2015 Google, Inc. All Rights Reserved.\n */\nimport React from 'react';\nimport styles from './styles';\nimport { createElement, StyleProp, TextStyle, ViewStyle } from 'react-native';\n\ninterface Props {\n  style?: StyleProp<ViewStyle & TextStyle>;\n}\n\nconst Error = (props: Props): React.ReactElement<Props> =>\n  createElement(\n    'svg',\n    {\n      ...props,\n      style: [styles.root, props.style],\n      viewBox: '0 0 24 24'\n    },\n    <g>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\" />\n    </g>\n  );\n\nError.metadata = { height: 24, width: 24 };\n\nexport default Error;\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport * as Theme from '../theme';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Dimensions, StyleSheet, Text, View } from 'react-native';\n\ninterface Props {\n  relativeTo: React.RefObject<View>;\n  text: string;\n}\n\nconst tipSpace = 6;\n\nconst Tooltip = (props: Props): React.ReactElement => {\n  const { relativeTo, text } = props;\n  const [position, setPosition] = React.useState({ top: -999, left: 0 });\n  const portalRoot = document.getElementById('tooltipPortal');\n  const ref: React.RefObject<View> = React.createRef();\n\n  React.useEffect(() => {\n    let mounted = true;\n    if (relativeTo.current) {\n      const { width: windowWidth, height: windowHeight } = Dimensions.get('window');\n      ref.current.measure(\n        (_x: number, _y: number, tipWidth: number, tipHeight: number): void => {\n          if (!mounted) {\n            return;\n          }\n          relativeTo.current.measureInWindow(\n            (x: number, y: number, width: number, height: number): void => {\n              if (!mounted) {\n                return;\n              }\n              let top = y + height + tipSpace;\n              let left = x + width / 2 - tipWidth / 2;\n              // too far right when underneath\n              if (left + tipWidth > windowWidth) {\n                left = x - tipWidth - tipSpace;\n                top = y + height / 2 - tipHeight / 2;\n              }\n              // too far left when underneath\n              else if (left < 0) {\n                left = x + width + tipSpace;\n                top = y + height / 2 - tipHeight / 2;\n              }\n              // too close to bottom\n              else if (top + tipHeight > windowHeight) {\n                top = y - tipHeight - tipSpace;\n              }\n\n              setPosition({ left, top });\n            }\n          );\n        }\n      );\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [ref, relativeTo]);\n\n  const tooltip = (\n    <View\n      // @ts-ignore\n      accessibilityRole=\"tooltip\"\n      ref={ref}\n      style={[styles.root, { top: position.top, left: position.left }, position.top > 0 && styles.show]}\n    >\n      <Text style={styles.text}>{text}</Text>\n    </View>\n  );\n\n  return portalRoot ? ReactDOM.createPortal(tooltip, portalRoot) : tooltip;\n};\n\nconst styles = StyleSheet.create({\n  root: {\n    maxWidth: 400,\n    // @ts-ignore\n    position: 'absolute',\n    backgroundColor: Theme.Color.Gray50,\n    borderRadius: Theme.BorderRadius.Normal,\n    paddingHorizontal: Theme.Spacing.Small,\n    paddingVertical: Theme.Spacing.Xsmall,\n    // @ts-ignore\n    transitionProperty: 'transform, opacity',\n    transitionDuration: '0.1s',\n    transitionTimingFunction: Theme.MotionTiming.Accelerate,\n    transform: [{ scale: 0.75 }],\n    opacity: 0\n  },\n  show: {\n    transform: [{ scale: 1 }],\n    opacity: 1\n  },\n  // @ts-ignore\n  text: {\n    color: Theme.TextColor.Gray50,\n    fontSize: Theme.FontSize.Xsmall,\n    textAlign: 'center'\n  }\n});\n\nexport default Tooltip;\n","/**\n * Material design redistributed from https://github.com/google/material-design-icons\n *\n * SVG contents redistributed under Apache License 2.0:\n * https://github.com/google/material-design-icons/blob/master/LICENSE\n * Copyright 2015 Google, Inc. All Rights Reserved.\n */\nimport React from 'react';\nimport styles from './styles';\nimport { createElement, StyleProp, TextStyle, ViewStyle } from 'react-native';\n\ninterface Props {\n  style?: StyleProp<ViewStyle & TextStyle>;\n}\n\nconst Warning = (props: Props): React.ReactElement<Props> =>\n  createElement(\n    'svg',\n    {\n      ...props,\n      style: [styles.root, props.style],\n      viewBox: '0 0 24 24'\n    },\n    <g>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </g>\n  );\n\nWarning.metadata = { height: 24, width: 24 };\n\nexport default Warning;\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport { BudgetLevel } from '@build-tracker/types';\nimport ErrorIcon from '../../icons/Error';\nimport React from 'react';\nimport { Td } from '../Table';\nimport Tooltip from '../Tooltip';\nimport WarningIcon from '../../icons/Warning';\nimport { DeltaCell as Cell, TotalDeltaCell as TDCell } from '@build-tracker/comparator';\nimport { formatBudgetResult, formatBytes } from '@build-tracker/formatting';\nimport { StyleProp, StyleSheet, Text, View, ViewStyle } from 'react-native';\n\ninterface Props {\n  cell: Cell | TDCell;\n  sizeKey: string;\n  style?: StyleProp<ViewStyle>;\n}\n\nexport interface Color {\n  red: number;\n  green: number;\n  blue: number;\n}\n\nexport const happy: Color = {\n  red: 6,\n  green: 176,\n  blue: 41\n};\n\nexport const danger: Color = {\n  red: 249,\n  green: 84,\n  blue: 84\n};\n\nexport const warning: Color = {\n  red: 237,\n  green: 170,\n  blue: 46\n};\n\nexport const scale = ({ red, blue, green }: Color, percentDelta: number): string =>\n  `rgba(${red},${green},${blue},${Math.max(Math.min(Math.abs(percentDelta), 1), 0)})`;\n\nexport const DeltaCell = (props: Props): React.ReactElement => {\n  const { cell, sizeKey, style } = props;\n  const sizeDelta = cell.sizes[sizeKey];\n  const percentDelta = cell.percents[sizeKey];\n  const viewRef: React.RefObject<View> = React.useRef(null);\n  const [showTooltip, setTooltipVisibility] = React.useState(false);\n\n  const handleEnter = React.useCallback(() => {\n    setTooltipVisibility(true);\n  }, []);\n\n  const handleExit = React.useCallback(() => {\n    setTooltipVisibility(false);\n  }, []);\n\n  const failingBudgets = cell.failingBudgets;\n  const errorBudgets = failingBudgets.filter(budget => budget.level === BudgetLevel.ERROR);\n  const warningBudgets = failingBudgets.filter(budget => budget.level === BudgetLevel.WARN);\n\n  let backgroundColor = 'transparent';\n  if (errorBudgets.length) {\n    backgroundColor = scale(danger, 1);\n  } else if (warningBudgets.length) {\n    backgroundColor = scale(warning, 1);\n  } else if (percentDelta > 0) {\n    backgroundColor = scale(danger, percentDelta);\n  } else if (sizeDelta === 0 && cell.hashChanged) {\n    backgroundColor = scale(warning, 0.5);\n  } else if (sizeDelta !== 0) {\n    backgroundColor = scale(happy, percentDelta);\n  }\n\n  const stringChange = `${sizeDelta} bytes (${(percentDelta * 100).toFixed(3)}%)`;\n  const title = cell.hashChanged && sizeDelta === 0 ? `Unexpected hash change! ${stringChange}` : stringChange;\n\n  const text = sizeDelta === 0 ? cell.hashChanged ? <WarningIcon /> : '' : formatBytes(sizeDelta);\n  const tooltipText = failingBudgets.length\n    ? failingBudgets.map(budget => formatBudgetResult(budget, cell.name)).join(', ')\n    : sizeDelta === 0 && cell.hashChanged\n    ? `The hash for \"${cell.name}\" unexpectedly changed`\n    : `\"${cell.name}\" changed by ${stringChange}`;\n\n  return (\n    <Td accessibilityLabel={title} style={[style, { backgroundColor }]}>\n      {text ? (\n        // @ts-ignore\n        <View\n          onMouseEnter={handleEnter}\n          onMouseLeave={handleExit}\n          ref={viewRef}\n          style={styles.textWrapper}\n          testID=\"delta\"\n        >\n          <Text>\n            {errorBudgets.length ? <ErrorIcon /> : warningBudgets.length ? <WarningIcon /> : null}\n            {failingBudgets.length ? ' ' : null}\n          </Text>\n          <Text>{text}</Text>\n        </View>\n      ) : null}\n      {showTooltip ? <Tooltip relativeTo={viewRef} text={tooltipText} /> : null}\n    </Td>\n  );\n};\n\nconst styles = StyleSheet.create({\n  textWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  }\n});\n\nexport default React.memo(DeltaCell);\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport { TotalCell as Cell } from '@build-tracker/comparator';\nimport { formatBytes } from '@build-tracker/formatting';\nimport React from 'react';\nimport { Td } from './../Table';\nimport { StyleProp, Text, ViewStyle } from 'react-native';\n\ninterface Props {\n  cell: Cell;\n  sizeKey: string;\n  style?: StyleProp<ViewStyle>;\n}\n\nexport const TotalCell = (props: Props): React.ReactElement => {\n  const { cell, sizeKey, style } = props;\n  const value = cell.sizes[sizeKey];\n  const text = value === 0 ? '' : formatBytes(value);\n  return <Td style={style}>{text ? <Text>{text}</Text> : null}</Td>;\n};\n\nexport default React.memo(TotalCell);\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport ArtifactCell from './ArtifactCell';\nimport DeltaCell from './DeltaCell';\nimport { hsl } from 'd3-color';\nimport React from 'react';\nimport { ScaleSequential } from 'd3-scale';\nimport { StyleSheet } from 'react-native';\nimport TotalCell from './TotalCell';\nimport { Tr } from './../Table';\nimport {\n  ArtifactCell as ACell,\n  ArtifactRow,\n  CellType,\n  DeltaCell as DCell,\n  GroupRow,\n  TotalCell as TCell,\n  TotalDeltaCell as TDCell\n} from '@build-tracker/comparator';\n\ninterface Props {\n  colorScale: ScaleSequential<string>;\n  isActive: boolean;\n  isHovered: boolean;\n  onDisableArtifact: (artifactName: string) => void;\n  onEnableArtifact: (artifactName: string) => void;\n  onFocusArtifact: (artifactName: string) => void;\n  onHoverArtifact: (revision: string) => void;\n  row: ArtifactRow | GroupRow;\n  rowIndex: number;\n  sizeKey: string;\n}\n\nexport const BodyRow = (props: Props): React.ReactElement => {\n  const {\n    colorScale,\n    isActive,\n    isHovered,\n    onDisableArtifact,\n    onEnableArtifact,\n    onFocusArtifact,\n    onHoverArtifact,\n    row,\n    rowIndex,\n    sizeKey\n  } = props;\n\n  const mapBodyCell = (cell: ACell | TCell | TDCell | DCell, i: number): React.ReactElement | void => {\n    switch (cell.type) {\n      case CellType.ARTIFACT: {\n        return (\n          <ArtifactCell\n            cell={cell}\n            color={colorScale(rowIndex)}\n            key={i}\n            isActive={isActive}\n            onDisable={onDisableArtifact}\n            onEnable={onEnableArtifact}\n            onFocus={onFocusArtifact}\n          />\n        );\n      }\n      case CellType.DELTA:\n        return <DeltaCell cell={cell} key={i} sizeKey={sizeKey} />;\n      case CellType.TOTAL:\n        return <TotalCell cell={cell} key={i} sizeKey={sizeKey} />;\n    }\n  };\n\n  let backgroundColor = 'transparent';\n  const artifactName = row[0].text;\n  if (isHovered) {\n    const color = hsl(colorScale(rowIndex));\n    color.l = 0.9;\n    backgroundColor = color.toString();\n  }\n  const handleMouseEnter = React.useCallback(() => {\n    onHoverArtifact(isActive ? artifactName : null);\n  }, [artifactName, isActive, onHoverArtifact]);\n\n  // @ts-ignore\n  const rows = row.map(mapBodyCell);\n\n  return (\n    <Tr onMouseEnter={handleMouseEnter} style={[styles.row, { backgroundColor }]}>\n      {rows}\n    </Tr>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    // @ts-ignore\n    transitionProperty: 'background-color',\n    transitionDuration: '0.1s'\n  }\n});\n\nexport default React.memo(BodyRow);\n","/**\n * Material design redistributed from https://github.com/google/material-design-icons\n *\n * SVG contents redistributed under Apache License 2.0:\n * https://github.com/google/material-design-icons/blob/master/LICENSE\n * Copyright 2015 Google, Inc. All Rights Reserved.\n */\nimport React from 'react';\nimport styles from './styles';\nimport { createElement, StyleProp, TextStyle, ViewStyle } from 'react-native';\n\ninterface Props {\n  style?: StyleProp<ViewStyle & TextStyle>;\n}\n\nconst Folder = (props: Props): React.ReactElement<Props> =>\n  createElement(\n    'svg',\n    {\n      ...props,\n      style: [styles.root, props.style],\n      viewBox: '0 0 24 24'\n    },\n    <g>\n      <path d=\"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\" />\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </g>\n  );\n\nFolder.metadata = { height: 24, width: 24 };\n\nexport default Folder;\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport * as Theme from '../../theme';\nimport FolderIcon from '../../icons/Folder';\nimport { GroupCell as GCell } from '@build-tracker/comparator';\nimport Hoverable from '../Hoverable';\nimport React from 'react';\nimport { Th } from '../Table';\nimport Tooltip from '../Tooltip';\nimport { StyleProp, StyleSheet, Switch, Text, TouchableOpacity, View, ViewStyle } from 'react-native';\n\ninterface Props {\n  cell: GCell;\n  disabled?: boolean;\n  isActive: boolean;\n  onDisable: (artifactNames: Array<string>) => void;\n  onEnable: (artifactNames: Array<string>) => void;\n  onFocus: (artifactNames: Array<string>) => void;\n  style?: StyleProp<ViewStyle>;\n}\n\nexport const GroupCell = (props: Props): React.ReactElement => {\n  const {\n    cell: { artifactNames, text },\n    disabled,\n    isActive,\n    onDisable,\n    onEnable,\n    onFocus,\n    style\n  } = props;\n\n  const nameRef = React.useRef<View>(null);\n  const [showTooltip, setShowTooltip] = React.useState(false);\n\n  const handleValueChange = React.useCallback(\n    (toggled: boolean): void => {\n      toggled ? onEnable(artifactNames) : onDisable(artifactNames);\n    },\n    [artifactNames, onDisable, onEnable]\n  );\n\n  const handleToggleTooltip = React.useCallback(() => {\n    setShowTooltip(showTooltip => !showTooltip);\n  }, []);\n\n  const handleFocus = React.useCallback(() => {\n    onFocus(artifactNames);\n  }, [artifactNames, onFocus]);\n\n  return (\n    <Th style={style}>\n      <View style={styles.artifact}>\n        <Hoverable>\n          {isHovered => (\n            <TouchableOpacity accessibilityRole=\"button\" onPress={handleFocus} style={styles.name}>\n              <View ref={nameRef}>\n                <Text style={isHovered && styles.hoveredText}>\n                  {\n                    // @ts-ignore\n                    <FolderIcon\n                      onMouseEnter={handleToggleTooltip}\n                      onMouseLeave={handleToggleTooltip}\n                      style={[styles.folder, isHovered && styles.hoveredText]}\n                      testID=\"groupicon\"\n                    />\n                  }{' '}\n                  {text}\n                </Text>\n              </View>\n            </TouchableOpacity>\n          )}\n        </Hoverable>\n        {showTooltip ? <Tooltip relativeTo={nameRef} text={`${artifactNames.join(', ')}`} /> : null}\n        <View style={styles.switch}>\n          {\n            // @ts-ignore\n            <Switch\n              activeThumbColor={Theme.Color.Primary30}\n              activeTrackColor={Theme.Color.Primary00}\n              disabled={disabled}\n              onValueChange={handleValueChange}\n              value={isActive}\n            />\n          }\n        </View>\n      </View>\n    </Th>\n  );\n};\n\nconst styles = StyleSheet.create({\n  artifact: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: Theme.Spacing.Xxsmall\n  },\n  name: {\n    flexShrink: 1,\n    flexGrow: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    paddingEnd: Theme.Spacing.Xsmall\n  },\n  folder: {\n    color: Theme.Color.Gray40\n  },\n  switch: {\n    paddingStart: Theme.Spacing.Xsmall\n  },\n  hoveredText: {\n    color: Theme.Color.Primary30\n  }\n});\n\nexport default React.memo(GroupCell);\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport * as Theme from '../../theme';\nimport DeltaCell from './DeltaCell';\nimport GroupCell from './GroupCell';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport TotalCell from './TotalCell';\nimport { Tr } from './../Table';\nimport {\n  CellType,\n  GroupCell as GCell,\n  GroupRow as GRow,\n  TotalCell as TCell,\n  TotalDeltaCell as TDCell\n} from '@build-tracker/comparator';\n\ninterface Props {\n  isActive: boolean;\n  onDisable: (artifactNames: Array<string>) => void;\n  onEnable: (artifactNames: Array<string>) => void;\n  onFocus: (artifactName: Array<string>) => void;\n  onHover: (artifactNames: Array<string>) => void;\n  row: GRow;\n  sizeKey: string;\n}\n\nexport const GroupRow = (props: Props): React.ReactElement => {\n  const { isActive, onDisable, onEnable, onFocus, onHover, row, sizeKey } = props;\n\n  const mapGroupCell = (cell: GCell | TCell | TDCell, i: number): React.ReactElement | void => {\n    switch (cell.type) {\n      case CellType.GROUP: {\n        return (\n          <GroupCell\n            cell={cell}\n            key={i}\n            isActive={isActive}\n            onDisable={onDisable}\n            onEnable={onEnable}\n            onFocus={onFocus}\n            style={styles.cell}\n          />\n        );\n      }\n      case CellType.TOTAL:\n        return <TotalCell cell={cell} key={i} sizeKey={sizeKey} style={styles.cell} />;\n      case CellType.TOTAL_DELTA:\n        return <DeltaCell cell={cell} key={i} sizeKey={sizeKey} style={styles.cell} />;\n    }\n  };\n\n  const { artifactNames } = row[0];\n\n  const handleMouseEnter = React.useCallback(() => {\n    onHover(isActive ? artifactNames : []);\n  }, [artifactNames, isActive, onHover]);\n\n  // @ts-ignore\n  const rows = row.map(mapGroupCell);\n\n  return (\n    <Tr onMouseEnter={handleMouseEnter} style={[styles.row]}>\n      {rows}\n    </Tr>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    backgroundColor: Theme.Color.Gray05,\n    // @ts-ignore\n    transitionProperty: 'background-color',\n    transitionDuration: '0.1s'\n  },\n  cell: {\n    borderColor: Theme.Color.Gray20\n  }\n});\n\nexport default React.memo(GroupRow);\n","/**\n * Material design redistributed from https://github.com/google/material-design-icons\n *\n * SVG contents redistributed under Apache License 2.0:\n * https://github.com/google/material-design-icons/blob/master/LICENSE\n * Copyright 2015 Google, Inc. All Rights Reserved.\n */\nimport React from 'react';\nimport styles from './styles';\nimport { createElement, StyleProp, TextStyle, ViewStyle } from 'react-native';\n\ninterface Props {\n  style?: StyleProp<ViewStyle & TextStyle>;\n}\n\nconst Info = (props: Props): React.ReactElement<Props> =>\n  createElement(\n    'svg',\n    {\n      ...props,\n      style: [styles.root, props.style],\n      viewBox: '0 0 24 24'\n    },\n    <g>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </g>\n  );\n\nInfo.metadata = { height: 24, width: 24 };\n\nexport default Info;\n","/**\n * Material design redistributed from https://github.com/google/material-design-icons\n *\n * SVG contents redistributed under Apache License 2.0:\n * https://github.com/google/material-design-icons/blob/master/LICENSE\n * Copyright 2015 Google, Inc. All Rights Reserved.\n */\nimport React from 'react';\nimport styles from './styles';\nimport { createElement, StyleProp, TextStyle, ViewStyle } from 'react-native';\n\ninterface Props {\n  style?: StyleProp<ViewStyle & TextStyle>;\n}\n\nconst Remove = (props: Props): React.ReactElement<Props> =>\n  createElement(\n    'svg',\n    {\n      ...props,\n      style: [styles.root, props.style],\n      viewBox: '0 0 24 24'\n    },\n    <g>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\" />\n    </g>\n  );\n\nRemove.metadata = { height: 24, width: 24 };\n\nexport default Remove;\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport * as Theme from '../../theme';\nimport { RevisionCell as Cell } from '@build-tracker/comparator';\nimport { formatSha } from '@build-tracker/formatting';\nimport Hoverable from '../Hoverable';\nimport InfoIcon from '../../icons/Info';\nimport Menu from '../Menu';\nimport MenuItem from '../MenuItem';\nimport React from 'react';\nimport RemoveIcon from '../../icons/Remove';\nimport { Th } from '../Table';\nimport { StyleProp, StyleSheet, Text, TouchableOpacity, ViewStyle } from 'react-native';\n\ninterface Props {\n  cell: Cell;\n  onFocus: (revision: string) => void;\n  onRemove: (revision: string) => void;\n  style?: StyleProp<ViewStyle>;\n}\n\nexport const RevisionCell = (props: Props): React.ReactElement => {\n  const { cell, onFocus, onRemove, style } = props;\n  const contentRef = React.useRef(null);\n  const [showMenu, toggleMenu] = React.useState(false);\n\n  const handleToggleMenu = React.useCallback((): void => {\n    toggleMenu(showMenu => !showMenu);\n  }, []);\n\n  const handleRemove = React.useCallback((): void => {\n    onRemove(cell.revision);\n    handleToggleMenu();\n  }, [cell.revision, handleToggleMenu, onRemove]);\n\n  const handleFocus = React.useCallback((): void => {\n    onFocus(cell.revision);\n    handleToggleMenu();\n  }, [cell.revision, handleToggleMenu, onFocus]);\n\n  return (\n    <>\n      <Hoverable>\n        {isHovered => (\n          <Th style={[style, isHovered && styles.hovered]}>\n            <TouchableOpacity\n              accessibilityRole=\"button\"\n              onPress={handleToggleMenu}\n              ref={contentRef}\n              style={styles.content}\n            >\n              <Text style={styles.revision}>{formatSha(cell.revision)}</Text>\n            </TouchableOpacity>\n          </Th>\n        )}\n      </Hoverable>\n      {showMenu ? (\n        <Menu onDismiss={handleToggleMenu} relativeTo={contentRef}>\n          <MenuItem icon={InfoIcon} label=\"More info\" onPress={handleFocus} />\n          <MenuItem icon={RemoveIcon} label=\"Remove\" onPress={handleRemove} />\n        </Menu>\n      ) : null}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  hovered: {\n    backgroundColor: Theme.Color.Primary00\n  },\n  content: {\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%'\n  },\n  revision: {\n    fontWeight: 'bold'\n  }\n});\n\nexport default React.memo(RevisionCell);\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport { RevisionDeltaCell as Cell } from '@build-tracker/comparator';\nimport { formatSha } from '@build-tracker/formatting';\nimport React from 'react';\nimport { Th } from '../Table';\nimport Tooltip from '../Tooltip';\nimport { StyleProp, StyleSheet, Text, View, ViewStyle } from 'react-native';\n\ninterface Props {\n  cell: Cell;\n  style?: StyleProp<ViewStyle>;\n}\n\nexport const RevisionDeltaCell = (props: Props): React.ReactElement => {\n  const { againstRevision, deltaIndex, revision } = props.cell;\n  const viewRef = React.useRef(null);\n  const [showTooltip, setTooltipVisibility] = React.useState(false);\n\n  const handleEnter = React.useCallback(() => {\n    setTooltipVisibility(true);\n  }, []);\n\n  const handleExit = React.useCallback(() => {\n    setTooltipVisibility(false);\n  }, []);\n\n  return (\n    <Th accessibilityLabel={`Delta from ${againstRevision} to ${revision}`} style={props.style}>\n      {\n        // @ts-ignore\n        <View onMouseEnter={handleEnter} onMouseLeave={handleExit} ref={viewRef} testID=\"delta\">\n          <Text style={styles.delta}>{`𝚫${deltaIndex}`}</Text>\n        </View>\n      }\n      {showTooltip ? (\n        <Tooltip relativeTo={viewRef} text={`Delta from ${formatSha(againstRevision)} to ${formatSha(revision)}`} />\n      ) : null}\n    </Th>\n  );\n};\n\nconst styles = StyleSheet.create({\n  delta: {\n    fontWeight: 'bold'\n  }\n});\n\nexport default React.memo(RevisionDeltaCell);\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport { TextCell as Cell } from '@build-tracker/comparator';\nimport React from 'react';\nimport { StyleProp, Text, ViewStyle } from 'react-native';\nimport { Td, Th } from './../Table';\n\ninterface Props {\n  cell: Cell;\n  header?: boolean;\n  style?: StyleProp<ViewStyle>;\n}\n\nexport const TextCell = (props: Props): React.ReactElement => {\n  const El = props.header ? Th : Td;\n  return (\n    <El style={props.style}>\n      <Text>{props.cell.text}</Text>\n    </El>\n  );\n};\n\nexport default React.memo(TextCell);\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport React from 'react';\nimport RevisionCell from './RevisionCell';\nimport RevisionDeltaCell from './RevisionDeltaCell';\nimport { StyleSheet } from 'react-native';\nimport TextCell from './TextCell';\nimport { Tr } from './../Table';\nimport { CellType, HeaderRow as HRow } from '@build-tracker/comparator';\n\ninterface Props {\n  onFocusRevision: (artifactName: string) => void;\n  onRemoveRevision: (artifactName: string) => void;\n  row: HRow;\n}\n\nexport const HeaderRow = (props: Props): React.ReactElement => {\n  const { onFocusRevision, onRemoveRevision, row } = props;\n\n  const mapHeaderCell = (cell, i): React.ReactElement | void => {\n    switch (cell.type) {\n      case CellType.TEXT:\n        return <TextCell cell={cell} header key={cell.text} style={styles.headerCell} />;\n      case CellType.REVISION:\n        return (\n          <RevisionCell\n            cell={cell}\n            key={cell.revision}\n            onFocus={onFocusRevision}\n            onRemove={onRemoveRevision}\n            style={styles.headerCell}\n          />\n        );\n      case CellType.REVISION_DELTA:\n        return (\n          <RevisionDeltaCell\n            cell={cell}\n            key={`${cell.revision}-${cell.againstRevision}-${i}`}\n            style={styles.headerCell}\n          />\n        );\n    }\n  };\n\n  return <Tr style={styles.headerRow}>{row.map(mapHeaderCell)}</Tr>;\n};\n\nconst styles = StyleSheet.create({\n  headerCell: {\n    backgroundColor: 'white',\n    // @ts-ignore\n    position: 'sticky',\n    top: 0,\n    zIndex: 4,\n    height: 'calc(4rem - 1px)'\n  }\n});\n\nexport default React.memo(HeaderRow);\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport BodyRow from './BodyRow';\nimport Comparator from '@build-tracker/comparator';\nimport GroupRow from './GroupRow';\nimport HeaderRow from './HeaderRow';\nimport React from 'react';\nimport { ScaleSequential } from 'd3-scale';\nimport { StyleSheet } from 'react-native';\nimport { Table, Tbody, Thead } from './../Table';\n\ninterface Props {\n  activeArtifacts: { [key: string]: boolean };\n  colorScale: ScaleSequential<string>;\n  comparator: Comparator;\n  disabledArtifactsVisible: boolean;\n  hoveredArtifacts: Array<string>;\n  onDisableArtifacts: (artifactNames: Array<string>) => void;\n  onEnableArtifacts: (artifactNames: Array<string>) => void;\n  onFocusArtifacts: (artifactName: Array<string>) => void;\n  onFocusRevision: (revision: string) => void;\n  onHoverArtifacts: (artifactNames: Array<string>) => void;\n  onRemoveRevision: (revision: string) => void;\n  sizeKey: string;\n}\n\nconst emptyArray = [];\n\nconst ComparisonTable = (props: Props): React.ReactElement => {\n  const {\n    activeArtifacts,\n    colorScale,\n    comparator,\n    disabledArtifactsVisible,\n    hoveredArtifacts,\n    onDisableArtifacts,\n    onEnableArtifacts,\n    onFocusArtifacts,\n    onFocusRevision,\n    onHoverArtifacts,\n    onRemoveRevision,\n    sizeKey\n  } = props;\n\n  const matrix = comparator.toJSON();\n\n  const handleMouseOut = React.useCallback(() => {\n    onHoverArtifacts([]);\n  }, [onHoverArtifacts]);\n\n  const handleHoverArtifact = React.useCallback(\n    (artifactName: string): void => {\n      onHoverArtifacts(artifactName ? [artifactName] : emptyArray);\n    },\n    [onHoverArtifacts]\n  );\n\n  const handleDisableArtifact = React.useCallback(\n    (artifactName: string): void => {\n      onDisableArtifacts([artifactName]);\n    },\n    [onDisableArtifacts]\n  );\n\n  const handleEnableArtifact = React.useCallback(\n    (artifactName: string): void => {\n      onEnableArtifacts([artifactName]);\n    },\n    [onEnableArtifacts]\n  );\n\n  const handleFocusArtifact = React.useCallback(\n    (artifactName: string): void => {\n      onFocusArtifacts([artifactName]);\n    },\n    [onFocusArtifacts]\n  );\n\n  return (\n    <Table onMouseLeave={handleMouseOut} style={styles.table}>\n      <Thead>\n        <HeaderRow onFocusRevision={onFocusRevision} onRemoveRevision={onRemoveRevision} row={matrix.header} />\n        {matrix.groups.map(row => {\n          const { artifactNames, text: groupName } = row[0];\n          const isActive = Object.keys(activeArtifacts)\n            .filter(artifactName => artifactNames.includes(artifactName))\n            .every(artifactName => activeArtifacts[artifactName]);\n          return (\n            <GroupRow\n              isActive={isActive}\n              key={groupName}\n              onDisable={onDisableArtifacts}\n              onEnable={onEnableArtifacts}\n              onFocus={onFocusArtifacts}\n              onHover={onHoverArtifacts}\n              row={row}\n              sizeKey={sizeKey}\n            />\n          );\n        })}\n      </Thead>\n      <Tbody>\n        {matrix.artifacts.map((row, i) => {\n          const artifactName = row[0].text;\n          const isActive = activeArtifacts[artifactName];\n          if (!isActive && !disabledArtifactsVisible) {\n            return null;\n          }\n          return (\n            <BodyRow\n              colorScale={colorScale}\n              isActive={isActive}\n              isHovered={hoveredArtifacts.includes(artifactName)}\n              key={artifactName}\n              onDisableArtifact={handleDisableArtifact}\n              onEnableArtifact={handleEnableArtifact}\n              onFocusArtifact={handleFocusArtifact}\n              onHoverArtifact={handleHoverArtifact}\n              row={row}\n              rowIndex={i}\n              sizeKey={sizeKey}\n            />\n          );\n        })}\n      </Tbody>\n    </Table>\n  );\n};\n\nconst styles = StyleSheet.create({\n  table: {\n    position: 'relative'\n  }\n});\n\nexport default ComparisonTable;\n","/**\n * Copyright (c) 2019 Paul Armstrong\n */\nimport * as Theme from '../theme';\nimport BuildInfo from '../components/BuildInfo';\nimport ColorScales from '../modules/ColorScale';\nimport ComparisonTable from '../components/ComparisonTable';\nimport React from 'react';\nimport { State } from '../store/types';\nimport { removeComparedRevision, setArtifactActive, setFocusedRevision, setHoveredArtifacts } from '../store/actions';\nimport { ScrollView, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport { useDispatch, useMappedState } from 'redux-react-hook';\n\ninterface Props {\n  style?: StyleProp<ViewStyle>;\n}\n\ninterface MappedState {\n  activeArtifacts: State['activeArtifacts'];\n  colorScaleName: State['colorScale'];\n  comparator: State['comparator'];\n  disabledArtifactsVisible: boolean;\n  focusedRevision: string;\n  hoveredArtifacts: Array<string>;\n  sizeKey: string;\n}\n\nconst mapState = (state: State): MappedState => ({\n  activeArtifacts: state.activeArtifacts,\n  colorScaleName: state.colorScale,\n  comparator: state.activeComparator,\n  disabledArtifactsVisible: state.disabledArtifactsVisible,\n  focusedRevision: state.focusedRevision,\n  hoveredArtifacts: state.hoveredArtifacts,\n  sizeKey: state.sizeKey\n});\n\nconst Comparison = (props: Props): React.ReactElement => {\n  const { style } = props;\n\n  const {\n    activeArtifacts,\n    colorScaleName,\n    comparator,\n    disabledArtifactsVisible,\n    focusedRevision,\n    hoveredArtifacts,\n    sizeKey\n  } = useMappedState(mapState);\n  const dispatch = useDispatch();\n\n  const colorScale = React.useMemo(() => ColorScales[colorScaleName].domain([0, comparator.artifactNames.length]), [\n    colorScaleName,\n    comparator.artifactNames.length\n  ]);\n\n  const handleDisableArtifacts = React.useCallback(\n    (artifactNames: Array<string>): void => {\n      dispatch(setArtifactActive(artifactNames, false));\n    },\n    [dispatch]\n  );\n\n  const handleEnableArtifacts = React.useCallback(\n    (artifactNames: Array<string>): void => {\n      dispatch(setArtifactActive(artifactNames, true));\n    },\n    [dispatch]\n  );\n\n  const handleFocusArtifacts = React.useCallback(\n    (artifactNames: Array<string>): void => {\n      dispatch(setArtifactActive(artifactNames, true));\n      dispatch(setArtifactActive(Object.keys(activeArtifacts).filter(name => !artifactNames.includes(name)), false));\n    },\n    [activeArtifacts, dispatch]\n  );\n\n  const handleFocusRevision = React.useCallback(\n    (revision: string): void => {\n      dispatch(setFocusedRevision(revision));\n    },\n    [dispatch]\n  );\n\n  const handleRemoveRevision = React.useCallback(\n    (revision: string): void => {\n      dispatch(removeComparedRevision(revision));\n    },\n    [dispatch]\n  );\n\n  const handleHoverArtifacts = React.useCallback(\n    (artifacts: Array<string>): void => {\n      dispatch(setHoveredArtifacts(artifacts));\n    },\n    [dispatch]\n  );\n\n  return (\n    <View style={style}>\n      <ScrollView horizontal style={styles.tableScroll}>\n        <ScrollView>\n          <ComparisonTable\n            activeArtifacts={activeArtifacts}\n            colorScale={colorScale}\n            comparator={comparator}\n            disabledArtifactsVisible={disabledArtifactsVisible}\n            hoveredArtifacts={hoveredArtifacts}\n            onDisableArtifacts={handleDisableArtifacts}\n            onEnableArtifacts={handleEnableArtifacts}\n            onFocusArtifacts={handleFocusArtifacts}\n            onFocusRevision={handleFocusRevision}\n            onHoverArtifacts={handleHoverArtifacts}\n            onRemoveRevision={handleRemoveRevision}\n            sizeKey={sizeKey}\n          />\n        </ScrollView>\n      </ScrollView>\n      {focusedRevision ? (\n        <React.Suspense fallback={null}>\n          <View style={styles.buildInfo} testID=\"buildinfo\">\n            <BuildInfo focusedRevision={focusedRevision} />\n          </View>\n        </React.Suspense>\n      ) : null}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tableScroll: {\n    width: '100%',\n    transitionProperty: 'height',\n    transitionDuration: '0.1s'\n  },\n  buildInfo: {\n    width: '100%',\n    borderTopColor: Theme.Color.Gray10,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    animationDuration: '0.1s',\n    animationKeyframes: [\n      {\n        '0%': { transform: [{ translateY: '100%' }] },\n        '100%': { transform: [{ translateY: '0%' }] }\n      }\n    ],\n    animationTimingFunction: 'ease-out',\n    animationIterationCount: 1\n  }\n});\n\nexport default Comparison;\n"],"sourceRoot":""}