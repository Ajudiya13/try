"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DEFAULT_BRANCH = 'master';
exports.queryByRevision = function (queries) { return function (req, res) {
    var revision = req.params.revision;
    queries
        .byRevision(revision)
        .then(function (build) {
        res.send(build);
    })
        .catch(function (error) {
        res.status(error.status || 500);
        res.send({ error: error.message });
    });
}; };
exports.queryByRevisionRange = function (queries) { return function (req, res) {
    var _a = req.params, startRevision = _a.startRevision, endRevision = _a.endRevision;
    queries
        .byRevisionRange(startRevision, endRevision)
        .then(function (builds) {
        res.send(builds);
    })
        .catch(function (error) {
        res.status(error.status || 500);
        res.send({ error: error.message });
    });
}; };
exports.queryByTimeRange = function (queries, config) { return function (req, res) {
    var _a = req.params, startTimestamp = _a.startTimestamp, endTimestamp = _a.endTimestamp;
    var branch = req.query.branch;
    queries
        .byTimeRange(parseInt(startTimestamp, 10), parseInt(endTimestamp, 10), branch || config.defaultBranch || DEFAULT_BRANCH)
        .then(function (builds) {
        res.send(builds);
    })
        .catch(function (error) {
        res.status(error.status || 500);
        res.send({ error: error.message });
    });
}; };
exports.queryByRevisions = function (queries) { return function (req, res) {
    var revisions = req.params[0];
    queries
        .byRevisions(revisions.split('/'))
        .then(function (builds) {
        res.send(builds);
    })
        .catch(function (error) {
        res.status(error.status || 500);
        res.send({ error: error.message });
    });
}; };
exports.queryByRecent = function (queries, config) { return function (req, res) {
    var limit = req.params.limit;
    var branch = req.query.branch;
    queries
        .recent(limit ? parseInt(limit, 10) : undefined, branch || config.defaultBranch || DEFAULT_BRANCH)
        .then(function (builds) {
        res.send(builds);
    })
        .catch(function (error) {
        res.status(error.status || 500);
        res.send({ error: error.message });
    });
}; };
//# sourceMappingURL=read.js.map